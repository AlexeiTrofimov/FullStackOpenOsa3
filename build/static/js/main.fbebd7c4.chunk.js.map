{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","removedObject","console","log","delete","Notification","message","className","ErrorMessage","errorMsg","Persons","persons","searchedName","removeData","filter","person","name","toLowerCase","includes","map","key","number","onClick","Filter","searchName","handleSearch","onSubmit","value","onChange","NewDataForm","addData","newName","newNumber","handleNameChange","handleNumberChange","type","App","useState","setPersons","setNewName","setNewNumber","setSearchedName","setMessage","setErrorMsg","useEffect","personService","initialPersons","changeData","find","p","changedData","returnedData","setTimeout","catch","error","event","preventDefault","target","newData","window","confirm","forEach","sentData","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbebd7c4.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const remove = removedObject => {\r\n    console.log(`${baseUrl}/${removedObject}`)\r\n    const request = axios.delete(\r\n        `${baseUrl}/${removedObject}`\r\n    )\r\n    return request\r\n    \r\n  }\r\n\r\nexport default { getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      <p>{message}</p>\n    </div>\n  )\n}\n\nconst ErrorMessage = ({ errorMsg }) => {\n  if (errorMsg === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      <p>{errorMsg}</p>\n    </div>\n  )\n}\nconst Persons = ({persons, searchedName, removeData}) => {\n  \n  const filtered = () => persons.filter((person) => person.name.toLowerCase().includes(searchedName.toLowerCase()))\n\n  return(    \n    filtered().map(person => \n    <p key={person.name}>{person.name} {person.number} \n    <button onClick={() => removeData(person)}>delete</button>\n    </p>\n    \n    )\n  )\n}\n\nconst Filter = ({searchName, searchedName, handleSearch}) => {\n  return (\n    <form onSubmit={searchName}>\n        <div>\n          filter shown with <input value = {searchedName}\n          onChange={handleSearch}\n          />\n        </div>\n\n      </form>\n  )\n}\n\nconst NewDataForm = ({addData, newName, newNumber, handleNameChange, handleNumberChange}) => {\n  return(\n  <form onSubmit={addData}>\n        <div>\n          name: <input value = {newName}\n          onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input value = {newNumber}\n          onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [searchedName, setSearchedName ] = useState('')\n  const [message, setMessage] = useState(null)\n  const [errorMsg, setErrorMsg] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  \n  const addData = (event) => {\n    event.preventDefault()\n\n    const newData = {\n      name : newName,\n      number: newNumber\n    }\n\n    if (persons.find(person => person.name === newData.name)) {\n      if (window.confirm(`${newData.name} is already added to phonebook, replace the old number with the new one?`)) {\n        persons.forEach(person => {\n          if (person.name === newData.name) {\n            changeData(person.id, newData.number)\n          }\n        })\n      }\n      \n    }\n    else{\n      personService\n      .create(newData)\n      .then(sentData => {\n        setPersons(persons.concat(sentData))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`${newData.name} added succesfully`)\n        setTimeout(()=> {\n          setMessage(null)},3000) \n      }) \n    }\n  }\n\n  const removeData = (person) => {\n    const id = person.id\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService\n        .remove(id)\n        \n        setPersons(persons.filter(person => person.id !== id))\n        \n        setMessage(`${person.name} removed succesfully`)\n        setTimeout(()=> {\n          setMessage(null)},3000) \n    }\n  }\n\n  const changeData = (id, newNumber) => {\n    const person = persons.find(p => p.id === id)\n    const changedData = { ...person, number: newNumber }\n\n    personService\n      .update(id, changedData)\n        .then(returnedData => {\n        setPersons(persons.map(person => person.id !== id ? person : returnedData))\n        setMessage(`${person.name}'s number changed succesfully`)\n        setTimeout(()=> {\n          setMessage(null)},3000) \n      }).catch(error => {\n        setErrorMsg(`Information of ${person.name} has already been removed from server`)\n        setPersons(persons.filter(person => person.id !== id))\n        setTimeout(()=> {\n          setErrorMsg(null)},3000) \n        })\n    setNewName('')\n    setNewNumber('')\n      \n      \n  }\n\n  const searchName = (event) => {\n    event.preventDefault()\n\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleSearch = (event) => {\n    setSearchedName(event.target.value)\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <ErrorMessage errorMsg={errorMsg} />\n      <Filter searchName={searchName} searchedName={searchedName} \n      handleSearch={handleSearch}/>\n      <h2>add a new</h2>\n        <NewDataForm addData={addData} newNumber={newNumber}\n        newName={newName} handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons persons={persons} searchedName={searchedName}\n      removeData={removeData} />\n      \n      \n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\n\nReactDOM.render(\n    <App  />,\n    document.getElementById('root')\n  )\n"],"sourceRoot":""}